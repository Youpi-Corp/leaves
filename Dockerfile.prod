# Production Dockerfile for Frontend
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

WORKDIR /app

# Copy package files
COPY package.json bun.lock ./

# Install Bun and dependencies
RUN npm install -g bun
RUN bun install --frozen-lockfile

# Copy source code
COPY . .

# Build arguments
ARG VITE_API_BASE_URL
ARG NODE_ENV=production

# Set environment variables
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV NODE_ENV=$NODE_ENV

# Build the application
RUN echo "Building production frontend with API URL: $VITE_API_BASE_URL"
RUN bun run build

# Verify build output
RUN ls -la dist/

# Production stage
FROM nginx:alpine

# Install additional packages for production
RUN apk add --no-cache curl

# Create nginx user for security
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S nginx-app -G nginx-app

# Copy custom nginx configuration
COPY nginx.prod.conf /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy SSL configuration template
COPY ssl.conf /etc/nginx/conf.d/ssl.conf

# Set proper permissions
RUN chown -R nginx-app:nginx-app /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Security: Run as non-root user
USER nginx-app

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]
